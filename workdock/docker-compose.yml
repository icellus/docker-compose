version: '3'

services:

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - TZ=${TZ}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/vhost
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    restart: always
    networks:
      - workdock

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_WORKMAN_REQUIRED=${PHP_FPM_INSTALL_WORKMAN_REQUIRED}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - TZ=${TZ}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php7.4.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - "9000"
    ports:
      - "9000:9000"
    restart: always
    networks:
      - workdock

  ### workerman ##############################################
  # 复用php-fpm容器
  workerman:
    build:
      context: ./php-fpm
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - COMPOSER_INSTALLER_REPO=${COMPOSER_INSTALLER_REPO}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_WORKMAN_REQUIRED=${PHP_FPM_INSTALL_WORKMAN_REQUIRED}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - TZ=${TZ}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php7.4.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    # todo 端口
    expose:
      - "1236"
    ports:
      - "1236:1236"
    restart: always
    networks:
      - workdock

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - workdock

  ### Redis ################################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - workdock

  ### REDISWEBUI ################################################
  redis-webui:
    build:
      context: ./redis-webui
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    networks:
      - workdock
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis

networks:
  workdock: